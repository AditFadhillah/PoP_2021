Hvordan man oversætter og kører koden:
	- Unzip mappen (4i_Aditya_Fadhillah_Hold_01.zip)
	- Gå ind på terminalen
	- Navigere til den unzippet mappe (4i_Aditya_Fadhillah_Hold_01/) på terminalen
	- Taste (fsharpc -a vec2dsmall.fsi vec2dsmall.fs) på terminalen, for at lave en (vec2dsmall.dll) fil
	- (vec2dsmall.dll) er fil som jeg kan bruge til at køre en .fsx fil

Hvordan man kører black-box testen:
	- Gå ind på terminalen
	- Navigere til den unzippet mappe (4i_Aditya_Fadhillah_Hold_01/) på terminalen
	- Taste (fsharpc -r vec2dsmall.dll 4i1.fsx) på terminalen
	- Taste (mono 4i1.exe) på terminalen

Hvordan man kører en <filnavn>.fsx fil:
	- Gå ind på terminalen
	- Navigere til den unzippet mappe (4i_Aditya_Fadhillah_Hold_01/) på terminalen
	- Taste (fsharpc -r vec2dsmall.dll <filnavn>.fsx) på terminalen
	- Taste (mono <filnavn>.exe) på terminalen

4i1)
Jeg har lavet en black-box der tjekker om det resultat jeg har tastet ind matcher med den aktuel resultat. 
Til funktionen (len) finder jeg først længden af en vector.
Jeg har brugt vektoren (6.0,8.0) som et eksempel og ved brug af formlen sqrt(x^2+y^2) fik jeg resulatet 10.0.
Jeg tjekker så om det er sandt, ved at påstå at (v = (x,y), x > 0, y > 0) når eksemplet er sandt.

printfn "%5b: v = (x,y), x > 0, y > 0" (len (6.0,8.0) = 10.0 )
---
 true: v = (x,y), x > 0, y > 0

Jeg testede for forskellige værdier for x og y, så de er mindre, større eller lige med 0. Det gav så:

Blackbox testing of len v
 true: v = (x,y), x < 0, y < 0
 true: v = (x,y), x > 0, y > 0
 true: v = (x,y), x > 0, y < 0
 true: v = (x,y), x = 0, y = 0

Jeg gjorde det samme med funktionen (ang).
Igen brugt jeg vektoren (4.0,4.0) som eksempel og ved brug af formlen atan2(y,x) gav 0.7853
Jeg testede for forskellige værdier for x og y, så de er mindre, større eller lige med 0, men det skal lige siges at y må aldrig være 0:

Blackbox testing of ang v
 true: v = (x,y), x > 0, y > 0
 true: v = (x,y), x < 0, y < 0
 true: v = (x,y), x > 0, y < 0
 true: v = (x,y), x = 0, y > 0

Til funktionen (add) skulle jeg bruge to vektorer. 
Som min eksempel brugt vektoren (6.0,8.0) og (8.0,6.0), og med formlen (x1+x2,y1+y2) fandt jeg frem til at det blev (14.0,14.0)
Jeg testede for forskellige værdier for x og y på begge vektorer, så de er mindre, større eller lige med 0:

Blackbox testing of add v1 v2
 true: v = (x1,y1), x1 > 0, y1 > 0, v2 = (x2,y2), x2 > 0, y2 > 0
 true: v = (x1,y1), x1 < 0, y1 < 0, v2 = (x2,y2), x2 < 0, y2 < 0
 true: v = (x1,y1), x1 < 0, y1 > 0, v2 = (x2,y2), x2 > 0, y2 < 0
 true: v = (x1,y1), x1 > 0, y1 < 0, v2 = (x2,y2), x2 < 0, y2 > 0
 true: v = (x1,y1), x1 = 0, y1 = 0, v2 = (x2,y2), x2 = 0, y2 = 0

4i2)
a)
printfn "Vector %A: (%f, %f)" v (vec2d.len v) (vec2d.ang v)
+------+------------------+-------+-----------------------------------------------------------------+
| Step | Linje            | Miljø | Binding                                                         |
+------+------------------+-------+-----------------------------------------------------------------+
| 1    | 4i2.fsx: 1       | E0    | v = (1.3, -2.5)                                                 |
+------+------------------+-------+-----------------------------------------------------------------+
| 2    | 4i2.fsx: 2       | E0    | printfn "Vector %A: (%f, %f)" v (vec2d.len v) (vec2d.ang v) = ? |
+------+------------------+-------+-----------------------------------------------------------------+
| 3    | 4i2.fsx: 2       | E0    | v = (1.3, -2.5)                                                 |
+------+------------------+-------+-----------------------------------------------------------------+
| 4    | 4i2.fsx: 2       | E0    | output = (1.3, -2.5)                                            |
+------+------------------+-------+-----------------------------------------------------------------+
| 5    | 4i2.fsx: 2       | E0    | vec2d.len v = ?                                                 |
+------+------------------+-------+-----------------------------------------------------------------+
| 6    | vec2dsmall.fs: 3 | E1    | len = ((v), sqrt(x**2.0+y**2.0), ())                                           |
+------+------------------+-------+-----------------------------------------------------------------+
| 7    | vec2dsmall.fs: 3 | E1    | ((v=(1.3, -2.5)), sqrt(x**2.0+y**2.0), ())                                     |
+------+------------------+-------+-----------------------------------------------------------------+
| 8    | vec2dsmall.fs: 5 | E1    | return = 2.817801                                               |
+------+------------------+-------+-----------------------------------------------------------------+
| 9    | 4i2.fsx: 2       | E0    | vec2d.len v = 2.817801                                          |
+------+------------------+-------+-----------------------------------------------------------------+
| 10   | 4i2.fsx: 2       | E0    | output = 2.817801                                               |
+------+------------------+-------+-----------------------------------------------------------------+
| 11   | 4i2.fsx: 2       | E0    | vec2d.ang v = ?                                                 |
+------+------------------+-------+-----------------------------------------------------------------+
| 12   | vec2dsmall.fs: 7 | E2    | ang = ((v), atan2 y x, ())                                      |
+------+------------------+-------+-----------------------------------------------------------------+
| 13   | vec2dsmall.fs: 7 | E2    | ((v=(1.3, -2.5)), atan2 y x, ())                                |
+------+------------------+-------+-----------------------------------------------------------------+
| 14   | vec2dsmall.fs: 9 | E2    | return = -1.091277                                              |
+------+------------------+-------+-----------------------------------------------------------------+
| 15   | 4i2.fsx: 2       | E0    | vec2d.ang v = -1.091277                                         |
+------+------------------+-------+-----------------------------------------------------------------+
| 16   | 4i2.fsx: 2       | E0    | output = -1.091277                                              |
+------+------------------+-------+-----------------------------------------------------------------+
| 17   | 4i2.fsx: 2       | E0    | printfn "Vector %A: (%f, %f)" v (vec2d.len v) (vec2d.ang v) = 0 |
+------+------------------+-------+-----------------------------------------------------------------+
| 18   | 4i2.fsx: 2       | E0    | return = 0                                                      |
+------+------------------+-------+-----------------------------------------------------------------+

b)
printfn "Vector %A: (%f, %f)" w (vec2d.len w) (vec2d.ang w)
+------+------------------+-------+-----------------------------------------------------------------+
| Step | Linje            | Miljø | Binding                                                         |
+------+------------------+-------+-----------------------------------------------------------------+
| 1    | 4i2.fsx: 3       | E0    | w = (-0.1, 0.5)                                                 |
+------+------------------+-------+-----------------------------------------------------------------+
| 2    | 4i2.fsx: 4       | E0    | printfn "Vector %A: (%f, %f)" w (vec2d.len w) (vec2d.ang w) = ? |
+------+------------------+-------+-----------------------------------------------------------------+
| 3    | 4i2.fsx: 4       | E0    | w = (-0.1, 0,5)                                                 |
+------+------------------+-------+-----------------------------------------------------------------+
| 4    | 4i2.fsx: 4       | E0    | output = (-0.1, 0.5)                                            |
+------+------------------+-------+-----------------------------------------------------------------+
| 5    | 4i2.fsx: 4       | E0    | vec2d.len w = ?                                                 |
+------+------------------+-------+-----------------------------------------------------------------+
| 6    | vec2dsmall.fs: 3 | E1    | len = ((w)), sqrt(x**2.0+y**2.0), ())                           |
+------+------------------+-------+-----------------------------------------------------------------+
| 7    | vec2dsmall.fs: 3 | E1    | ((w=(-0.1, 0.5)), sqrt(x**2.0+y**2.0), ())                      |
+------+------------------+-------+-----------------------------------------------------------------+
| 8    | vec2dsmall.fs: 5 | E1    | return = 0.509902                                               |
+------+------------------+-------+-----------------------------------------------------------------+
| 9    | 4i2.fsx: 4       | E0    | vec2d.len w = 0.509902                                          |
+------+------------------+-------+-----------------------------------------------------------------+
| 10   | 4i2.fsx: 4       | E0    | output = 0.509902                                               |
+------+------------------+-------+-----------------------------------------------------------------+
| 11   | 4i2.fsx: 4       | E0    | vec2d.ang w = ?                                                 |
+------+------------------+-------+-----------------------------------------------------------------+
| 12   | vec2dsmall.fs: 7 | E2    | ang = ((w), atan2 y x, ())                                      |
+------+------------------+-------+-----------------------------------------------------------------+
| 13   | vec2dsmall.fs: 7 | E2    | ((w=(-0.1, 0.5)), atan2 y x, ())                                |
+------+------------------+-------+-----------------------------------------------------------------+
| 14   | vec2dsmall.fs: 9 | E2    | return = 1.768192                                               |
+------+------------------+-------+-----------------------------------------------------------------+
| 15   | 4i2.fsx: 4       | E0    | vec2d.ang w = 1.768192                                          |
+------+------------------+-------+-----------------------------------------------------------------+
| 16   | 4i2.fsx: 4       | E0    | output = 1.768192                                               |
+------+------------------+-------+-----------------------------------------------------------------+
| 17   | 4i2.fsx: 4       | E0    | printfn "Vector %A: (%f, %f)" w (vec2d.len w) (vec2d.ang w) = 0 |
+------+------------------+-------+-----------------------------------------------------------------+
| 18   | 4i2.fsx: 4       | E0    | return = 0                                                      |
+------+------------------+-------+-----------------------------------------------------------------+

c)
printfn "Vector %A: (%f, %f)" s (vec2d.len s) (vec2d.ang s)
+------+-------------------+-------+-----------------------------------------------------------------+
| Step | Linje             | Miljø | Binding                                                         |
+------+-------------------+-------+-----------------------------------------------------------------+
| 1    | 4i2.fsx: 1        | E0    | v = (1.3, -2.5)                                                 |
+------+-------------------+-------+-----------------------------------------------------------------+
| 2    | 4i2.fsx: 3        | E0    | w = (-0.1, 0.5)                                                 |
+------+-------------------+-------+-----------------------------------------------------------------+
| 3    | 4i2.fsx: 5        | E0    | s = vec2d.add v w                                               |
+------+-------------------+-------+-----------------------------------------------------------------+
| 4    | 4i2.fsx: 6        | E0    | printfn "Vector %A: (%f, %f)" s (vec2d.len s) (vec2d.ang s) = ? |
+------+-------------------+-------+-----------------------------------------------------------------+
| 5    | 4i2.fsx: 6        | E0    | s = ?                                                           |
+------+-------------------+-------+-----------------------------------------------------------------+
| 6    | 4i2.fsx: 5        | E1    | vec2d.add v w = ?                                               |
+------+-------------------+-------+-----------------------------------------------------------------+
| 7    | vec2dsmall.fs: 11 | E2    | add = ((v),(w), ((x1+x2),(y1+y2)), ())                          |
+------+-------------------+-------+-----------------------------------------------------------------+
| 8    | vec2dsmall.fs: 11 | E2    | ((v=(1.3, -2.5)),(w=-0.1,0.5), ((x1+x2),(y1+y2)), ())           |
+------+-------------------+-------+-----------------------------------------------------------------+
| 9    | vec2dsmall.fs: 14 | E2    | return = (1.2, -2.0)                                            |
+------+-------------------+-------+-----------------------------------------------------------------+
| 10   | 4i2.fsx: 5        | E1    | vec2d.add v w = (1.2, -2.0)                                     |
+------+-------------------+-------+-----------------------------------------------------------------+
| 11   | 4i2.fsx: 6        | E0    | s = (1.2, -2.0)                                                 |
+------+-------------------+-------+-----------------------------------------------------------------+
| 12   | 4i2.fsx: 6        | E0    | output = (1.2, -2.0)                                            |
+------+-------------------+-------+-----------------------------------------------------------------+
| 13   | 4i2.fsx: 6        | E0    | vec2d.len s = ?                                                 |
+------+-------------------+-------+-----------------------------------------------------------------+
| 14   | vec2dsmall.fs: 3  | E3    | len = ((s), sqrt(x**2.0+y**2.0), ())                            |
+------+-------------------+-------+-----------------------------------------------------------------+
| 15   | vec2dsmall.fs: 3  | E3    | ((s=(1.2, -2.0)), sqrt(x**2.0+y**2.0), ())                      |
+------+-------------------+-------+-----------------------------------------------------------------+
| 16   | vec2dsmall.fs: 3  | E3    | return = 2.332381                                               |
+------+-------------------+-------+-----------------------------------------------------------------+
| 17   | 4i2.fsx: 6        | E0    | vec2d.len = 2.332381                                            |
+------+-------------------+-------+-----------------------------------------------------------------+
| 18   | 4i2.fsx: 6        | E0    | output = 2.332381                                               |
+------+-------------------+-------+-----------------------------------------------------------------+
| 19   | 4i2.fsx: 6        | E0    | vec2d.ang s = ?                                                 |
+------+-------------------+-------+-----------------------------------------------------------------+
| 20   | vec2dsmall.fs: 3  | E4    | ang = ((s), atan2 y x, ())                                      |
+------+-------------------+-------+-----------------------------------------------------------------+
| 21   | vec2dsmall.fs: 3  | E4    | ((s=(1.2, -2.0)), atan2 y x, ())                                |
+------+-------------------+-------+-----------------------------------------------------------------+
| 22   | vec2dsmall.fs: 3  | E4    | return = -1.030377                                              |
+------+-------------------+-------+-----------------------------------------------------------------+
| 23   | 4i2.fsx: 6        | E0    | vec2d.ang = -1.030377                                           |
+------+-------------------+-------+-----------------------------------------------------------------+
| 24   | 4i2.fsx: 6        | E0    | output = -1.030377                                              |
+------+-------------------+-------+-----------------------------------------------------------------+
| 25   | 4i2.fsx: 6        | E0    | printfn "Vector %A: (%f, %f)" s (vec2d.len s) (vec2d.ang s)     |
+------+-------------------+-------+-----------------------------------------------------------------+
| 26   | 4i2.fsx: 6        | E0    | return = 0                                                      |
+------+-------------------+-------+-----------------------------------------------------------------+

